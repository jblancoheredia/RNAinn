/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                             RNAinn Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                 Default config options for all compute environments
-----------------------------------------------------------------------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                                                   = null

    // Don't spill these secrets...
    qiagen                                                  = false
    cosmic_passwd                                           = null
    cosmic_username                                         = null
    build_references                                        = false

    // MultiQC options
    multiqc_logo                                            = null
    multiqc_title                                           = null
    multiqc_config                                          = null
    max_multiqc_email_size                                  = '25.MB'
    multiqc_methods_description                             = null

    // Genome
    genome                                                  = 'GRCh38'
    genomes                                                 = [:]
    refs_dir                                                = '/Users/blancoj/Documents/MSKCC/CMOinnovation/REF'
    read_length                                             = 100
    genome_base                                             = "${refs_dir}/${genome}"
    ensembl_version                                         = 112
    starfusion_build                                        = false

    // Enable or disable tools
    all                                                     = false
    arriba                                                  = true
    stringtie                                               = true
    starindex                                               = false
    portcullis                                              = true
    starfusion                                              = true
    fusionreport                                            = true
    fusioncatcher                                           = true
    fusioninspector                                         = true
    fusioninspector_only                                    = false

    // Genomes options
    gtf                                                     = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.gtf"
    bed                                                     = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.filtered.bed"
    fai                                                     = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.fa.fai"
    dict                                                    = "${params.genome_base}/gatk4/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.dict"
    fasta                                                   = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.fa"
    chrgtf                                                  = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.chr.gtf"
    refflat                                                 = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.chr.gtf.refflat"
    transcripts                                             = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.cdna.all.transcripts"
    chromosomes                                             = "${params.genome_base}/fusioncatcher/human_v112/chromosomes_lengths.txt"
    splicesites                                             = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.filtered.splice_sites.txt"
    rrna_refflat                                            = "${params.genome_base}/gatk4/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.refFlat.txt"
    rrna_intervals                                          = "${params.genome_base}/rrna/Homo_sapiens.${params.genome}.${params.ensembl_version}_rrna_intervals.header.gtf"

    // Path to references
    rsem_ref                                                = "${params.genome_base}/rsem"
    hgnc_ref                                                = "${params.genome_base}/hgnc/hgnc_complete_set.txt"
    hgnc_date                                               = "${params.genome_base}/hgnc/HGNC-DB-timestamp.txt"
    arriba_ref                                              = "${params.genome_base}/arriba"
    ensembl_ref                                             = "${params.genome_base}/ensembl"
    starfusion_ref                                          = "${params.genome_base}/starfusion/ctat_genome_lib"
    fusionreport_ref                                        = "${params.genome_base}/fusion_report_db"
    fusioncatcher_ref                                       = "${params.genome_base}/fusioncatcher/human_v112"
    arriba_ref_blocklist                                    = "${params.genome_base}/arriba/blocklist_hg38_GRCh38_v2.4.0.tsv.gz"
    arriba_ref_cytobands                                    = "${params.genome_base}/arriba/cytobands_hg38_GRCh38_v2.4.0.tsv"
    arriba_ref_known_fusions                                = "${params.genome_base}/arriba/known_fusions_hg38_GRCh38_v2.4.0.tsv.gz"
    starfusion_ref_annot_gtf                                = "${params.genome_base}/starfusion/ctat_genome_lib/ref_annot.gtf"
    arriba_ref_protein_domains                              = "${params.genome_base}/arriba/protein_domains_hg38_GRCh38_v2.4.0.gff3"

    // Skip steps
    skip_qc                    = false
    skip_vis                   = false

    // Compression
    cram                                                    = []

    // Trimming
    trim_tail                                               = null
    fastp_trim                                              = true
    adapter_fasta                                           = []

    // Filtering
    tools_cutoff                                            = 1

    // EXPRESSION
    gencode                                                 = false
    gtf_group_features                                      = 'gene_id'
    gtf_extra_attributes                                    = 'gene_name'
    featurecounts_group_type                                = 'gene_biotype'
    featurecounts_feature_type                              = 'exon'

    // ALIGN
    lib_type                                                = 'ISR'
    bwa_index                                               = "${params.genome_base}/bwa"
    star_index                                              = "${params.genome_base}/star"
    salmon_index                                            = "${params.genome_base}/salmon_index"
    kallisto_index                                          = "${params.genome_base}/kallisto_index/kallisto"
    alignment_mode                                          = true
    star_seq_center                                         = 'IGO'
    star_seq_platform                                       = 'ILLUMINA'
    star_ignore_sjdbgtf                                     = false
    fusioncatcher_limitSjdbInsertNsj                        = 2000000
    fusioninspector_limitSjdbInsertNsj                      = 1000000

    // Path to fusion outputs
    allowlist                                               = null
    arriba_fusions                                          = null
    starfusion_fusions                                      = null
    fusioncatcher_fusions                                   = null
    fusioninspector_fusions                                 = null

    // fgbio 
    call_min_reads                                          = 1	            // default minimum input reads for fgbio's CALLMOLECULARCONSENSUSREADS
    call_min_baseq                                          = 10  	        // default minimum input base quality for fgbio's CALLMOLECULARCONSENSUSREADS
    filter_min_reads                                        = 2	            // default minimum input reads for fgbio's FILTERCONSENSUSREADS
    filter_min_baseq                                        = 10  	        // default base quality below which reads are masked for fgbio's FILTERCONSENSUSREADS
    groupreadsbyumi_strategy                                = 'Adjacency'   // default strategy fgbio's GROUPREADSBYUMI
    filter_max_read_error_rate                              = 0.025         // default maximum raw-base error rate for fgbio's FILTERCONSENSUSREADS NOTE: Only for double stranded libraries
    filter_max_base_error_rate                              = 0.1 	        // default maximum raw-read error rate for fgbio's FILTERCONSENSUSREADS

    // Boilerplate options
    help                                                    = false
    email                                                   = null
    outdir                                                  = null
    version                                                 = false
    hook_url                                                = null
    email_on_fail                                           = null
    plaintext_email                                         = false
    monochrome_logs                                         = false
    publish_dir_mode                                        = 'copy'
    pipelines_testdata_base_path                            = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    custom_config_base                                      = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_url                                      = null
    config_profile_name                                     = null
    custom_config_version                                   = 'master'
    config_profile_contact                                  = null
    config_profile_description                              = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                                              = '64.GB'
    max_cpus                                                = 12
    max_time                                                = '24.h'

    // Schema validation default options
    validate_params                                         = true
    validationLenientMode                                   = false
    validationShowHiddenParams                              = false
    validationSchemaIgnoreParams                            = 'genomes,igenome_base,monochromeLogs'
    validationFailUnrecognisedParams                        = false

    // nf-validation warning bug
    monochromeLogs                                          = null
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    jbh {
        docker.enabled                                      = true
        docker.
        docker.runOptions                                   = '-u $(id -u):$(id -g) --platform=linux/amd64 -v /Users/Shared/TMPDIR:/tmp'
        conda.enabled                                       = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    debug {
        dumpHashes                                          = true
        process.beforeScript                                = 'echo $HOSTNAME'
        cleanup                                             = false
        nextflow.enable.configProcessNamesValidation        = true
    }
    conda {
        conda.enabled                                       = true
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        conda.channels                                      = ['conda-forge', 'bioconda', 'defaults']
        apptainer.enabled                                   = false
    }
    mamba {
        conda.enabled                                       = true
        conda.useMamba                                      = true
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    docker {
        docker.enabled                                      = true
        conda.enabled                                       = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
        docker.runOptions                                   = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions                                   = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled                                 = true
        singularity.autoMounts                              = true
        singularity.runOptions                              = "-B $TMPDIR"
        conda.enabled                                       = false
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    podman {
        podman.enabled                                      = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    shifter {
        shifter.enabled                                     = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        charliecloud.enabled                                = false
        apptainer.enabled                                   = false
    }
    charliecloud {
        charliecloud.enabled                                = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        apptainer.enabled                                   = false
    }
    apptainer {
        apptainer.enabled                                   = true
        apptainer.autoMounts                                = true
        conda.enabled                                       = false
        docker.enabled                                      = false
        singularity.enabled                                 = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        charliecloud.enabled                                = false
    }
    wave {
        apptainer.ociAutoPull                               = true
        singularity.ociAutoPull                             = true
        wave.enabled                                        = true
        wave.freeze                                         = true
        wave.strategy                                       = 'conda,container'
    }
    gitpod {
        executor.name                                       = 'local'
        executor.cpus                                       = 4
        executor.memory                                     = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry                                          = 'quay.io'
docker.registry                                             = 'quay.io'
podman.registry                                             = 'quay.io'
singularity.registry                                        = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE                                        = 1
    R_PROFILE_USER                                          = "/.Rprofile"
    R_ENVIRON_USER                                          = "/.Renviron"
    JULIA_DEPOT_PATH                                        = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'giovianco/rnainn'
    author          = """blancoj@mskcc.org"""
    homePage        = 'https://github.com/giovianco/rnainn'
    description     = """MSKCC-CMO-Innovation RNA-seq analysis pipeline --> RNAinn is a comprehensive RNA-seq analysis pipeline Nextflow implemented for the analysis of RNA-seq data. It is designed to be highly flexible and can be run on a wide range of computing environments, from a single laptop, to a computing cluster or cloud computing environments. This pipeline was created using nf-core policies and tools."""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
