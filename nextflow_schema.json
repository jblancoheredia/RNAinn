{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/giovianco/rnainn/master/nextflow_schema.json",
    "title": "giovianco/rnainn pipeline parameters",
    "description": "MSKCC-CMO-Innovation RNA-seq analysis pipeline --> RNAinn is a comprehensive RNA-seq analysis pipeline Nextflow implemented for the analysis of RNA-seq data. It is designed to be highly flexible and can be run on a wide range of computing environments, from a single laptop, to a computing cluster or cloud computing environments. This pipeline was created using nf-core policies and tools.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input",
                "outdir"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "pipeline_execution_options": {
            "title": "Pipeline execution options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "Options to control which pipeline modules to run",
            "properties": {
                "run_dedupandrecal": {
                    "type": "boolean",
                    "description": "Run deduplication and recalibration",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable deduplication and base quality score recalibration steps"
                },
                "run_umiprocessing": {
                    "type": "boolean",
                    "description": "Run UMI processing",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable UMI-based processing of reads"
                },
                "run_fusion_splice": {
                    "type": "boolean",
                    "description": "Run fusion and splice detection",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable fusion gene and splice junction detection"
                },
                "run_genexpression": {
                    "type": "boolean",
                    "description": "Run gene expression analysis",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable gene expression quantification"
                },
                "run_variantdscvry": {
                    "type": "boolean",
                    "description": "Run variant discovery",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable variant calling and discovery"
                },
                "run_copynumberalt": {
                    "type": "boolean",
                    "description": "Run copy number alteration analysis",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable copy number variation detection"
                },
                "run_immunoncology": {
                    "type": "boolean",
                    "description": "Run immuno-oncology analysis",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable immune-related analysis modules"
                },
                "run_telomerefeats": {
                    "type": "boolean",
                    "description": "Run telomere features analysis",
                    "fa_icon": "fas fa-cog",
                    "help_text": "Enable telomere length and features analysis"
                }
            }
        },
        "sequencing_metadata": {
            "title": "Sequencing metadata",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Metadata about the sequencing experiment",
            "properties": {
                "seq_center": {
                    "type": "string",
                    "description": "Sequencing center name",
                    "fa_icon": "fas fa-building",
                    "help_text": "Name of the sequencing center (e.g., MSKCC_IGO)"
                },
                "seq_library": {
                    "type": "string",
                    "description": "Library preparation protocol",
                    "fa_icon": "fas fa-vial",
                    "help_text": "Library preparation protocol used (e.g., Av1)"
                },
                "seq_platform": {
                    "type": "string",
                    "description": "Sequencing platform",
                    "fa_icon": "fas fa-microscope",
                    "help_text": "Sequencing platform used (e.g., ILLUMINA)"
                }
            }
        },
        "rnainn_preprocess": {
            "title": "RNAinn pipeline custom options (preprocess)",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for when preprocess reads by UMI",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Human genome version",
                    "fa_icon": "fas fa-book",
                    "help_text": "Human genome version to use for alignment. Options are: GRCh37 & GRCh38."
                },
                "refs_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory containing reference files",
                    "fa_icon": "fas fa-book",
                    "help_text": "Directory containing reference files for the pipeline. This directory should contain the following subdirectories: `ensembl`, `star`, etc..."
                },
                "genome_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory containing Human genome files",
                    "fa_icon": "fas fa-book",
                    "help_text": "Directory containing reference files for the pipeline. This directory should contain the following subdirectories: `ensembl`, `star`, etc..."
                },
                "ensembl_version": {
                    "type": "integer",
                    "description": "ENSEMBL version number",
                    "fa_icon": "fas fa-book",
                    "help_text": "ENSEMBL version number to use for alignment."
                },
                "ensembl_genome_version": {
                    "type": "string",
                    "description": "ENSEMBL genome version",
                    "fa_icon": "fas fa-book",
                    "help_text": "ENSEMBL genome version to use (e.g., p14)"
                },
                "read_length": {
                    "type": "integer",
                    "description": "Library size",
                    "fa_icon": "fas fa-book",
                    "help_text": "Library size of the reads."
                },
                "gtf": {
                    "type": "string",
                    "description": "GTF file",
                    "fa_icon": "fas fa-book",
                    "help_text": "GTF file to use for alignment."
                },
                "fasta": {
                    "type": "string",
                    "description": "Fasta file",
                    "fa_icon": "fas fa-book", 
                    "help_text": "Fasta file to use for alignment."
                },
                "fai": {
                    "type": "string",
                    "description": "Fai file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Fai file to use for alignment."
                },
                "star_index": {
                    "type": "string",
                    "description": "STAR index",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR index to use for alignment."
                },
                "chrgtf": {
                    "type": "string",
                    "description": "Chromosome GTF file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Chromosome GTF file to use for alignment."
                },
                "refflat": {
                    "type": "string",
                    "description": "RefFlat file",
                    "fa_icon": "fas fa-book",
                    "help_text": "RefFlat file to use for alignment."
                },
                "rrna_intervals": {
                    "type": "string",
                    "description": "rRNA intervals file",
                    "fa_icon": "fas fa-book",
                    "help_text": "rRNA intervals file to use for alignment."
                },
                "dict": {
                    "type": "string",
                    "description": "Dict file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Dict file to use for alignment."
                },
                "bwa_index": {
                    "type": "string",
                    "description": "BWA index",
                    "fa_icon": "fas fa-book",
                    "help_text": "BWA index to use for alignment."
                },
                "bwa2": {
                    "type": "string",
                    "description": "BWA2 index directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "BWA2 index directory to use for alignment."
                },
                "star_seq_center": {
                    "type": "string",
                    "description": "STAR sequence center",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR sequence center to use for alignment."
                },
                "star_seq_platform": {
                    "type": "string",
                    "description": "STAR sequence platform",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR sequence platform to use for alignment."
                },
                "star_ignore_sjdbgtf": {
                    "type": "string",
                    "description": "STAR ignore sjdbgtf",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR ignore sjdbgtf to use for alignment."
                },
                "star_twopass": {
                    "type": "boolean",
                    "description": "Enable STAR two-pass mode",
                    "fa_icon": "fas fa-book",
                    "help_text": "Enable STAR two-pass mapping mode for improved alignment accuracy."
                },
                "group_strategy": {
                    "type": "string",
                    "description": "Group reads by UMI strategy",
                    "fa_icon": "fas fa-book",
                    "help_text": "Group reads by UMI strategy to use for alignment."
                },
                "call_min_reads": {
                    "type": "integer",
                    "description": "Call min reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Call min reads to use for alignment."
                },
                "call_min_baseq": {
                    "type": "integer",
                    "description": "Call min baseq",
                    "fa_icon": "fas fa-book",
                    "help_text": "Call min baseq to use for alignment."
                },
                "call_error_rate_pre_umi": {
                    "type": "integer",
                    "description": "Call error rate pre-UMI",
                    "fa_icon": "fas fa-book",
                    "help_text": "Error rate threshold for calling pre-UMI processing."
                },
                "call_error_rate_post_umi": {
                    "type": "integer",
                    "description": "Call error rate post-UMI",
                    "fa_icon": "fas fa-book",
                    "help_text": "Error rate threshold for calling post-UMI processing."
                },
                "call_produce_per_base_tags": {
                    "type": "boolean",
                    "description": "Produce per-base tags",
                    "fa_icon": "fas fa-book",
                    "help_text": "Enable production of per-base quality tags."
                },
                "filter_min_reads": {
                    "type": "integer",
                    "description": "Filter min reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Filter min reads to use for alignment."
                },
                "filter_min_base_quality": {
                    "type": "integer",
                    "description": "Filter min baseq",
                    "fa_icon": "fas fa-book",
                    "help_text": "Filter min baseq to use for alignment."
                },
                "filter_max_read_error_rate": {
                    "type": "number",
                    "description": "Filter max read error rate",
                    "fa_icon": "fas fa-book",
                    "help_text": "Filter max read error rate to use for alignment."
                },
                "filter_max_base_error_rate": {
                    "type": "number",
                    "description": "Filter max base error rate",
                    "fa_icon": "fas fa-book",
                    "help_text": "Filter max base error rate to use for alignment."
                },
                "filter_max_no_call_fraction": {
                    "type": "number",
                    "description": "Filter max no-call fraction",
                    "fa_icon": "fas fa-book",
                    "help_text": "Maximum fraction of no-calls allowed in reads."
                },
                "transcripts": {
                    "type": "string",
                    "description": "CDNA transcript file",
                    "fa_icon": "fas fa-book",
                    "help_text": "CDNA transcript file to use for alignment."
                },
                "run_downsamplings": {
                    "type": "boolean",
                    "description": "To run or not samples downsampling",
                    "fa_icon": "fas fa-book",
                    "help_text": "Automatic sample downsampling."
                },
                "ds_totalreads_aim": {
                    "type": "string",
                    "description": "Number of Total Reads to downsample overwrites the automatic processing",
                    "fa_icon": "fas fa-book",
                    "help_text": "Number of total reads for sample downsampling."
                },
                "blocklist_bed": {
                    "type": "string",
                    "description": "Block list file",
                    "fa_icon": "fas fa-book",
                    "help_text": "Selfdescriptive."
                },
                "splicesites": {
                    "type": "string",
                    "description": "CDNA splicesites file",
                    "fa_icon": "fas fa-book",
                    "help_text": "CDNA splicesites file to use for alignment."
                },
                "remove_duplicates": {
                    "type": "boolean",
                    "description": "Remove duplicate reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Enable removal of duplicate reads during processing."
                },
                "bam_csi_index": {
                    "type": "boolean",
                    "description": "Use CSI index for BAM files",
                    "fa_icon": "fas fa-book",
                    "help_text": "Enable CSI indexing instead of BAI for large BAM files."
                }
            }
        },
        "genomic_intervals": {
            "title": "Genomic intervals and target regions",
            "type": "object",
            "fa_icon": "fas fa-crosshairs",
            "description": "Options for defining target regions and genomic intervals",
            "properties": {
                "targets": {
                    "type": "string",
                    "description": "Target intervals BED file",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "BED file containing target intervals for analysis."
                },
                "intervals": {
                    "type": "string",
                    "description": "Analysis intervals BED file",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "BED file containing intervals for analysis."
                },
                "targets_bed": {
                    "type": "string",
                    "description": "Target regions BED file",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "BED file containing target regions."
                },
                "interval_list": {
                    "type": "string",
                    "description": "Interval list file",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "Picard-style interval list file."
                },
                "intervals_gunzip": {
                    "type": "string",
                    "description": "Compressed intervals file",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "Gzipped BED file containing intervals."
                },
                "intervals_gunzip_index": {
                    "type": "string",
                    "description": "Compressed intervals index file",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "Index file for compressed intervals BED file."
                },
                "optional_bait_intervals": {
                    "type": ["string", "null"],
                    "description": "Optional bait intervals",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "Optional bait intervals for targeted sequencing."
                },
                "optional_target_intervals": {
                    "type": ["string", "null"],
                    "description": "Optional target intervals",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "Optional target intervals for analysis."
                },
                "hsmetrics_baits": {
                    "type": "string",
                    "description": "Hybrid selection metrics bait intervals",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "Bait interval list for hybrid selection metrics."
                },
                "hsmetrics_trgts": {
                    "type": "string",
                    "description": "Hybrid selection metrics target intervals",
                    "fa_icon": "fas fa-crosshairs",
                    "help_text": "Target interval list for hybrid selection metrics."
                }
            }
        },
        "variant_calling": {
            "title": "Variant calling options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for variant calling and annotation",
            "properties": {
                "known_sites": {
                    "type": "string",
                    "description": "Known variant sites VCF",
                    "fa_icon": "fas fa-database",
                    "help_text": "VCF file containing known variant sites for recalibration."
                },
                "known_sites_tbi": {
                    "type": "string",
                    "description": "Known variant sites VCF index",
                    "fa_icon": "fas fa-database",
                    "help_text": "Index file for known variant sites VCF."
                },
                "known_indels": {
                    "type": "string",
                    "description": "Known indels VCF",
                    "fa_icon": "fas fa-database",
                    "help_text": "VCF file containing known indels."
                },
                "known_indels_tbi": {
                    "type": "string",
                    "description": "Known indels VCF index",
                    "fa_icon": "fas fa-database",
                    "help_text": "Index file for known indels VCF."
                },
                "dbsnp": {
                    "type": "string",
                    "description": "dbSNP VCF file",
                    "fa_icon": "fas fa-database",
                    "help_text": "dbSNP VCF file for variant annotation."
                },
                "dbsnp_tbi": {
                    "type": "string",
                    "description": "dbSNP VCF index",
                    "fa_icon": "fas fa-database",
                    "help_text": "Index file for dbSNP VCF."
                },
                "gatk_interval_list": {
                    "type": "string",
                    "description": "GATK interval list",
                    "fa_icon": "fas fa-list",
                    "help_text": "GATK-format interval list for variant calling."
                },
                "gatk_interval_scatter_count": {
                    "type": "integer",
                    "description": "GATK interval scatter count",
                    "fa_icon": "fas fa-list",
                    "help_text": "Number of intervals to scatter for parallel processing."
                },
                "gatk_hc_call_conf": {
                    "type": "integer",
                    "description": "GATK HaplotypeCaller call confidence",
                    "fa_icon": "fas fa-phone",
                    "help_text": "Minimum confidence threshold for variant calling."
                },
                "gatk_vf_fs_filter": {
                    "type": "number",
                    "description": "GATK VariantFiltration FS filter",
                    "fa_icon": "fas fa-filter",
                    "help_text": "FisherStrand filter threshold for variant filtering."
                },
                "gatk_vf_qd_filter": {
                    "type": "number",
                    "description": "GATK VariantFiltration QD filter",
                    "fa_icon": "fas fa-filter",
                    "help_text": "QualByDepth filter threshold for variant filtering."
                },
                "gatk_vf_window_size": {
                    "type": "integer",
                    "description": "GATK VariantFiltration window size",
                    "fa_icon": "fas fa-filter",
                    "help_text": "Window size for variant filtering."
                },
                "gatk_vf_cluster_size": {
                    "type": "integer",
                    "description": "GATK VariantFiltration cluster size",
                    "fa_icon": "fas fa-filter",
                    "help_text": "Cluster size threshold for variant filtering."
                }
            }
        },
        "variant_annotation": {
            "title": "Variant annotation options",
            "type": "object",
            "fa_icon": "fas fa-tags",
            "description": "Options for variant annotation and effect prediction",
            "properties": {
                "snpeff_db": {
                    "type": "string",
                    "description": "SnpEff database",
                    "fa_icon": "fas fa-database",
                    "help_text": "SnpEff database for variant annotation."
                },
                "snpeff_cache": {
                    "type": "string",
                    "description": "SnpEff cache directory",
                    "fa_icon": "fas fa-database",
                    "help_text": "Directory containing SnpEff cache files."
                },
                "vep_cache": {
                    "type": ["string", "null"],
                    "description": "VEP cache directory",
                    "fa_icon": "fas fa-database",
                    "help_text": "Directory containing VEP cache files."
                },
                "vep_genome": {
                    "type": ["string", "null"],
                    "description": "VEP genome version",
                    "fa_icon": "fas fa-dna",
                    "help_text": "Genome version for VEP annotation."
                },
                "vep_cache_version": {
                    "type": ["string", "null"],
                    "description": "VEP cache version",
                    "fa_icon": "fas fa-tag",
                    "help_text": "Version of VEP cache to use."
                }
            }
        },
        "copy_number_analysis": {
            "title": "Copy number analysis options",
            "type": "object",
            "fa_icon": "fas fa-copy",
            "description": "Options for copy number variation analysis",
            "properties": {
                "cnvkit_reference": {
                    "type": "string",
                    "description": "CNVkit reference file",
                    "fa_icon": "fas fa-copy",
                    "help_text": "CNVkit reference file for copy number analysis."
                },
                "cnvkit_antitarget": {
                    "type": "string",
                    "description": "CNVkit antitarget BED file",
                    "fa_icon": "fas fa-copy",
                    "help_text": "CNVkit antitarget BED file for copy number analysis."
                }
            }
        },
        "rnainn_fusions": {
            "title": "RNAinn pipeline custom options (fusions)",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for when fusions block is run",
            "properties": {
                "all": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "To run or not all junctions/fusions steps",
                    "help_text": "Do you fancy the whole enchilada?"
                },
                "arriba": {
                    "type": "boolean",
                    "description": "Tu run or not Arriba",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Run Arriba?"
                },
                "fusioncatcher": {
                    "type": "boolean",
                    "description": "Tu run or not FusionCatcher",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Run FusionCatcher?"
                },
                "starindex": {
                    "type": "boolean",
                    "description": "Tu build or not STAR index",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Build STAR index?"
                },
                "starfusion": {
                    "type": "boolean",
                    "description": "Tu run or not STAR-Fusion",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Run STAR-Fusion?"
                },
                "starfusion_build": {
                    "type": "boolean",
                    "description": "Tu build or not STAR-Fusion index",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Build STAR-Fusion index?"
                },
                "stringtie": {
                    "type": "boolean",
                    "description": "Tu run or not StringTie",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Run StringTie?"
                },
                "fusionreport": {
                    "type": "boolean",
                    "description": "Tu run or not FusionReport",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Run FusionReport?"
                },
                "fusioninspector_only": {
                    "type": "boolean",
                    "description": "Tu run or not FusionInspector",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Run FusionInspector?"
                },
                "fastp_trim": {
                    "type": "boolean",
                    "description": "Tu run or not Fastp for Trimming",
                    "fa_icon": "far fa-eye-slash",
                    "help_text": "Run Trim Fastp?"
                },
                "ensembl_ref": {
                    "type": "string",
                    "description": "ENSEMBL reference directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "ENSEMBL reference directory to use for alignment."
                },
                "arriba_ref": {
                    "type": "string",
                    "description": "Arriba reference directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "Arriba reference directory to use for alignment."
                },
                "arriba_ref_blocklist": {
                    "type": "string",
                    "description": "Arriba reference blocklist",
                    "fa_icon": "fas fa-book",
                    "help_text": "Arriba reference blocklist to use for alignment."
                },
                "arriba_ref_cytobands": {
                    "type": "string",
                    "description": "Arriba reference cytobands",
                    "fa_icon": "fas fa-book",
                    "help_text": "Arriba reference cytobands to use for alignment."
                },
                "arriba_ref_known_fusions": {
                    "type": "string",
                    "description": "Arriba reference known fusions",
                    "fa_icon": "fas fa-book",
                    "help_text": "Arriba reference known fusions to use for alignment."
                },
                "arriba_ref_protein_domains": {
                    "type": "string",
                    "description": "Arriba reference protein domains",
                    "fa_icon": "fas fa-book",
                    "help_text": "Arriba reference protein domains to use for alignment."
                },
                "fusioncatcher_ref": {
                    "type": "string",
                    "description": "FusionCatcher reference directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "FusionCatcher reference directory to use for alignment."
                },
                "hgnc_ref": {
                    "type": "string",
                    "description": "HGNC reference directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "HGNC reference directory to use for alignment."
                },
                "hgnc_date": {
                    "type": "string",
                    "description": "HGNC date",
                    "fa_icon": "fas fa-book",
                    "help_text": "HGNC date to use for alignment."
                },
                "starfusion_ref": {
                    "type": "string",
                    "description": "STAR-Fusion reference directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR-Fusion reference directory to use for alignment."
                },
                "starfusion_ref_annot_gtf": {
                    "type": "string",
                    "description": "STAR-Fusion reference annotation GTF",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR-Fusion reference annotation GTF to use for alignment."
                },
                "fusionreport_ref": {
                    "type": "string",
                    "description": "FusionReport reference directory",
                    "fa_icon": "fas fa-book",
                    "help_text": "FusionReport reference directory to use for alignment."
                },
                "cram": {
                    "type": "string",
                    "description": "Tools to CRAM",
                    "fa_icon": "fas fa-book",
                    "help_text": "Tools to use CRAM for alignment outputs."
                },
                "trim_tail": {
                    "type": "string",
                    "description": "Trim tail",
                    "fa_icon": "fas fa-book",
                    "help_text": "Sequence to trim at the tail before alignment."
                },
                "adapter_fasta": {
                    "type": "string",
                    "description": "Adapter fasta",
                    "fa_icon": "fas fa-book",
                    "help_text": "Adapter fasta sequence to trim before alignment."
                },
                "fusioncatcher_limitSjdbInsertNsj": {
                    "type": "integer",
                    "description": "FusionCatcher limitSjdbInsertNsj",
                    "fa_icon": "fas fa-book",
                    "help_text": "FusionCatcher limitSjdbInsertNsj to use for alignment."
                },
                "qiagen": {
                    "type": "boolean",
                    "description": "Qiagen credentials",
                    "fa_icon": "fas fa-book",
                    "help_text": "Qiagen authentication for data access."
                },
                "cosmic_passwd": {
                    "type": "string",
                    "description": "COSMIC password",
                    "fa_icon": "fas fa-book",
                    "help_text": "COSMIC password for data access."
                },
                "cosmic_username": {
                    "type": "string",
                    "description": "COSMIC username",
                    "fa_icon": "fas fa-book",
                    "help_text": "COSMIC username for data access."
                },
                "build_references": {
                    "type": "boolean",
                    "description": "Build references",
                    "fa_icon": "fas fa-book",
                    "help_text": "Build references for the pipeline."
                },
                "skip_qc": {
                    "type": "boolean",
                    "description": "Skip QC",
                    "fa_icon": "fas fa-book",
                    "help_text": "Skip QC for the pipeline."
                },
                "skip_vis": {
                    "type": "boolean",
                    "description": "Skip visualization",
                    "fa_icon": "fas fa-book",
                    "help_text": "Skip visualization for the pipeline."
                },
                "save_unaligned": {
                    "type": "boolean",
                    "description": "Save unaligned reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "Save unaligned reads for the pipeline."
                },
                "star_bins_bamsort": {
                    "type": "integer",
                    "description": "STAR bins bamsort",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR bins bamsort for the pipeline."
                },
                "save_align_intermeds": {
                    "type": "boolean",
                    "description": "Save alignment intermediates",
                    "fa_icon": "fas fa-book",
                    "help_text": "Save alignment intermediates for the pipeline."
                },
                "star_max_intron_size": {
                    "type": "integer",
                    "description": "STAR max intron size",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR max intron size for the pipeline."
                },
                "star_max_collapsed_junc": {
                    "type": "integer",
                    "description": "STAR max collapsed junctions",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR max collapsed junctions for the pipeline."
                },
                "star_max_memory_bamsort": {
                    "type": "integer",
                    "description": "STAR max memory bamsort",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR max memory bamsort for the pipeline."
                },
                "f2b_umi_qual_tag": {
                    "type": "string",
                    "description": "fgbio Fastq2BAM UMI quality tag",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio Fastq2BAM UMI quality tag for the pipeline."
                },
                "f2b_umi_tag": {
                    "type": "string",
                    "description": "fgbio Fastq2BAM UMI tag",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio Fastq2BAM UMI tag for the pipeline."
                },
                "f2b_read_structure": {
                    "type": "string",
                    "description": "fgbio Fastq2BAM read structure",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio Fastq2BAM read structure for the pipeline."
                },
                "correct_max_mismatch": {
                    "type": "integer",
                    "description": "fgbio CorrectUMI max mismatch",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio CorrectUMI max mismatch for the pipeline."
                },
                "group_edits": {
                    "type": "integer",
                    "description": "fgbio GroupReadsByUMI nember of edits",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio GroupReadsByUMI number of edits for the pipeline."
                },
                "correct_min_corrected": {
                    "type": "string",
                    "description": "fgbio CorrectUMI min fraction corrected",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio CorrectUMI min fraction corrected for the pipeline."
                },
                "correct_min_distance": {
                    "type": "integer",
                    "description": "fgbio CorrectUMI min distance",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio CorrectUMI min distance for the pipeline."
                },
                "group_min_map_q": {
                    "type": "integer",
                    "description": "fgbio GroupReadsByUMI min mapping quality",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio GroupReadsByUMI min mapping quality for the pipeline."
                },
                "group_mark_duplicates": {
                    "type": "boolean",
                    "description": "fgbio GroupReadsByUMI mark duplicates",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio GroupReadsByUMI mark duplicates for the pipeline."
                },
                "group_include_secondary": {
                    "type": "boolean",
                    "description": "fgbio CorrectUMI include secondary reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio CorrectUMI include secondary reads for the pipeline."
                },
                "group_allow_inter_contig": {
                    "type": "boolean",
                    "description": "fgbio CorrectUMI allow inter-contig reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio CorrectUMI allow inter-contig reads for the pipeline."
                },
                "group_include_non_pf_reads": {
                    "type": "boolean",
                    "description": "fgbio CorrectUMI include non-PF reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio CorrectUMI include non-PF reads for the pipeline."
                },
                "group_include_supplementary": {
                    "type": "boolean",
                    "description": "fgbio CorrectUMI include supplementary reads",
                    "fa_icon": "fas fa-book",
                    "help_text": "fgbio CorrectUMI include supplementary reads for the pipeline."
                },
                "tools_cutoff": {
                    "type": "integer",
                    "description": "Tools cutoff",
                    "fa_icon": "fas fa-book",
                    "help_text": "Tools cutoff for the pipeline."
                },
                "fusioninspector_limitSjdbInsertNsj": {
                    "type": "integer",
                    "description": "FusionInspector limitSjdbInsertNsj",
                    "fa_icon": "fas fa-book",
                    "help_text": "FusionInspector limitSjdbInsertNsj for the pipeline."
                },
                "allowlist": {
                    "type": "string",
                    "description": "Allowlist",
                    "fa_icon": "fas fa-book",
                    "help_text": "Allowlist for the pipeline."
                },
                "arriba_fusions": {
                    "type": "string",
                    "description": "Arriba fusions",
                    "fa_icon": "fas fa-book",
                    "help_text": "Arriba fusions for the pipeline."
                },
                "starfusion_fusions": {
                    "type": "string",
                    "description": "STAR-Fusion fusions",
                    "fa_icon": "fas fa-book",
                    "help_text": "STAR-Fusion fusions for the pipeline."
                },
                "fusioncatcher_fusions": {
                    "type": "string",
                    "description": "FusionCatcher fusions",
                    "fa_icon": "fas fa-book",
                    "help_text": "FusionCatcher fusions for the pipeline."
                },
                "fusioninspector_fusions": {
                    "type": "string",
                    "description": "FusionInspector fusions",
                    "fa_icon": "fas fa-book",
                    "help_text": "FusionInspector fusions for the pipeline."
                },
                "rrna_refflat": {
                    "type": "string",
                    "description": "rRNA RefFlat",
                    "fa_icon": "fas fa-book",
                    "help_text": "rRNA RefFlat for the pipeline."
                },
                "bed": {
                    "type": "string",
                    "description": "BED file",
                    "fa_icon": "fas fa-book",
                    "help_text": "BED file for the pipeline."
                },
                "portcullis": {
                    "type": "boolean",
                    "description": "Portcullis",
                    "fa_icon": "fas fa-book",
                    "help_text": "Portcullis for the pipeline."
                },
                "fusioninspector": {
                    "type": "boolean",
                    "description": "Enable FusionInspector analysis",
                    "fa_icon": "fas fa-search",
                    "help_text": "Run FusionInspector to validate and annotate fusion predictions."
                },
                "cytobands": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Path to cytobands file",
                    "help_text": "Part of the FusViz references bundle"     
                },
                "fusviz_chr": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Path to chromosomes file",
                    "help_text": "Part of the FusViz references bundle"     
                },
                "annotations": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Path to annotations file",
                    "help_text": "Part of the FusViz references bundle"     
                },
                "protein_domains": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Path to protein domains file",
                    "help_text": "Part of the FusViz references bundle"     
                },
                "cpus": {
                    "type": "integer",
                    "description": "Number of CPUs to allocate",
                    "fa_icon": "fas fa-microchip",
                    "help_text": "Minimum requirement expected to be changed based on your system."
                },
                "memory": {
                    "type": "string",
                    "description": "Memory to allocate in GB",
                    "fa_icon": "fas fa-memory",
                    "help_text": "Minimum requirement expected to be changed based on your system (e.g., '8.GB')."
                },
                "skip_variantannotation": {
                    "type": "boolean",
                    "description": "Skip variant annotation step",
                    "fa_icon": "fas fa-forward",
                    "help_text": "Skip the variant annotation process in the pipeline."
                }
            }
        },
        "rnainn_expression": {
            "title": "RNAinn pipeline custom options (expression)",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for when expression block is run",
            "properties": {
                "lib_type": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Type of library, paired and strand",
                    "help_text": "What are you cooking?"
                },
                "rsem_ref": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Path to RSEM Index",
                    "help_text": "Part of the references bundle"     
                },
                "salmon_index": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Path to Salmon Index",
                    "help_text": "Part of the references bundle"                    
                },
                "alignment_mode": {
                    "type": "boolean",
                    "description": "Is Salmon in alignment",
                    "fa_icon": "fas fa-book",
                    "help_text": "Set to true to perform quants"
                },
                "chromosomes": {
                    "type": "string",
                    "description": "Chromosomes info file",
                    "fa_icon": "fas fa-book",
                    "help_text": "File with chromosomes names and length"
                },
                "kallisto_index": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Path to Kallisto Index",
                    "help_text": "Part of the references bundle"                    
                },
                "gtf_group_features": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Feature to count",
                    "help_text": "What feature will be used for the countings"                    
                },
                "gtf_extra_attributes": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Extra feature to count",
                    "help_text": "What other feature use for the countings"                    
                },
                "featurecounts_group_type": {
                    "type": "string",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Feature in gtf file to produce the group stats",
                    "help_text": "Feature to use for the group counting stats"                    
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/pipeline_execution_options"
        },
        {
            "$ref": "#/definitions/sequencing_metadata"
        },
        {
            "$ref": "#/definitions/rnainn_preprocess"
        },
        {
            "$ref": "#/definitions/genomic_intervals"
        },
        {
            "$ref": "#/definitions/variant_calling"
        },
        {
            "$ref": "#/definitions/variant_annotation"
        },
        {
            "$ref": "#/definitions/copy_number_analysis"
        },
        {
            "$ref": "#/definitions/rnainn_fusions"
        },
        {
            "$ref": "#/definitions/rnainn_expression"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
